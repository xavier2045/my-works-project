// vite.config.ts
import { defineConfig } from "file:///D:/project/AETRIX/aetrix/node_modules/vite/dist/node/index.js";
import vue from "file:///D:/project/AETRIX/aetrix/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import path from "path";
import { fileURLToPath, URL } from "node:url";
import { visualizer } from "file:///D:/project/AETRIX/aetrix/node_modules/rollup-plugin-visualizer/dist/plugin/index.js";
import Inspect from "file:///D:/project/AETRIX/aetrix/node_modules/vite-plugin-inspect/dist/index.mjs";
import ViteRestart from "file:///D:/project/AETRIX/aetrix/node_modules/vite-plugin-restart/dist/index.js";
import postCssPxToRem from "file:///D:/project/AETRIX/aetrix/node_modules/postcss-pxtorem/index.js";
import viteCompression from "file:///D:/project/AETRIX/aetrix/node_modules/vite-plugin-compression/dist/index.mjs";
import WindiCSS from "file:///D:/project/AETRIX/aetrix/node_modules/vite-plugin-windicss/dist/index.mjs";
import Components from "file:///D:/project/AETRIX/aetrix/node_modules/unplugin-vue-components/dist/vite.js";
import { VantResolver } from "file:///D:/project/AETRIX/aetrix/node_modules/unplugin-vue-components/dist/resolvers.js";
import minipic from "file:///D:/project/AETRIX/aetrix/node_modules/vite-plugin-minipic/dist/index.mjs";
import legacy from "file:///D:/project/AETRIX/aetrix/node_modules/@vitejs/plugin-legacy/dist/index.mjs";
var __vite_injected_original_dirname = "D:\\project\\AETRIX\\aetrix";
var __vite_injected_original_import_meta_url = "file:///D:/project/AETRIX/aetrix/vite.config.ts";
var port = process.env.port || process.env.npm_config_port || 8888;
var vite_config_default = defineConfig({
  base: "/",
  server: {
    host: "0.0.0.0",
    // 设置为允许外部访问
    port: Number(port),
    // 设置开发服务器端口号
    open: false,
    // 启动时自动在浏览器中打开
    proxy: {
      // 配置代理
      "/api": {
        target: "http://192.168.77.20:8888",
        changeOrigin: true,
        // rewrite: (path) => path.replace(/^\/api/, ''),
        rewrite: (path2) => {
          const newPath = path2.replace(/^\/api/, "");
          console.log(`Rewriting path from "${path2}" to "${newPath}"`);
          return newPath;
        },
        configure: (proxy, options) => {
          proxy.on("proxyReq", (proxyReq, req, res) => {
            console.log("Proxy Request Path:", req.url);
          });
          proxy.on("proxyRes", (proxyRes, req, res) => {
            let body = [];
            proxyRes.on("data", (chunk) => {
              body.push(chunk);
            });
            proxyRes.on("end", () => {
              body = Buffer.concat(body).toString();
              console.log("Proxy Response Body:", body);
            });
          });
          proxy.on("error", (err, req, res) => {
            console.error("Proxy Error:", err);
          });
        }
      }
    },
    headers: {
      "Access-Control-Allow-Origin": "*"
    },
    hmr: {
      // 热重载配置
      protocol: "ws",
      // WebSocket 协议
      host: "localhost",
      // 本地主机名或你的本地 IP 地址
      port: 3e3
      // HMR 端口
    }
  },
  plugins: [
    vue({
      template: {
        compilerOptions: { isCustomElement: (tag) => tag.startsWith("wc-") }
      }
    }),
    // ElementPlus(),
    minipic(),
    viteCompression({
      verbose: true,
      // 是否在控制台中输出压缩结果
      disable: false,
      threshold: 10240,
      // 如果体积大于阈值，将被压缩，单位为b，体积过小时请不要压缩，以免适得其反
      algorithm: "gzip",
      // 压缩算法，可选['gzip'，' brotliccompress '，'deflate '，'deflateRaw']
      ext: ".gz",
      // 压缩后的文件扩展名
      deleteOriginFile: false
      // 源文件压缩后是否删除
    }),
    WindiCSS(),
    visualizer({
      filename: "dist/report.html",
      // 打包分析报告的输出路径
      open: false
      // 打包后自动打开报告
    }),
    Inspect(),
    ViteRestart({
      restart: [
        "my.config.[jt]s"
      ]
    }),
    Components({
      dirs: ["src/components"],
      // 目标文件夹
      extensions: ["vue", "jsx"],
      // 文件类型
      dts: "src/components.d.ts",
      // 输出文件，里面都是一些import的组件键值对
      // ui库解析器，也可以自定义，需要安装相关UI库
      resolvers: [
        VantResolver()
        // ElementPlusResolver(),
        // AntDesignVueResolver(),
        // HeadlessUiResolver(),
        // ElementUiResolver()
      ]
    }),
    legacy({
      targets: ["defaults", "not IE 11"]
    })
  ],
  resolve: {
    alias: {
      "@": fileURLToPath(new URL("./src", __vite_injected_original_import_meta_url)),
      "@assets": path.resolve(__vite_injected_original_dirname, "src/assets")
    }
  },
  build: {
    outDir: "dist",
    assetsDir: "static",
    target: "es2015",
    terserOptions: {
      compress: {
        // 打包的时候可以移除console和debugger
        drop_console: true,
        drop_debugger: true
      }
    },
    rollupOptions: {
      treeshake: true,
      input: {
        main: "index.html"
      },
      output: {
        /**
         * 自定义拆分代码块的函数。
         * 该函数用于确定如何将特定的模块ID拆分到不同的代码块中。
         * 特别是，它针对node_modules目录中的模块做了特殊处理，
         * 以优化大型应用程序的初始加载时间。
         * 
         * @param id 模块的ID，这是一个字符串，表示模块在项目中的路径。
         * @returns {string} 返回一个字符串，表示根据特定规则拆分后的代码块名称。
         * 如果模块ID包含'node_modules'，则返回从'node_modules'开始到第一个斜杠为止的字符串，
         * 作为代码块的名称。否则，返回空字符串，表示不进行拆分。
         */
        manualChunks(id) {
          if (id.includes("node_modules")) {
            return id.toString().split("node_modules/")[1].split("/")[0].toString();
          }
        },
        assetFileNames: (assetInfo) => {
          const name = assetInfo.name || "unknown";
          if (/\.(gif|jpe?g|png|svg|webp)$/.test(name)) {
            return "images/[name]-[hash][extname]";
          }
          if (/\.css$/.test(name)) {
            return "styles/[name]-[hash][extname]";
          }
          return "assets/[name]-[hash][extname]";
        },
        chunkFileNames: "js/[name]-[hash].js",
        entryFileNames: "js/[name]-[hash].js"
      }
    },
    chunkSizeWarningLimit: 500
    // chunk 大小警告的限制
  },
  optimizeDeps: {
    include: ["@vue/reactivity", "vue", "axios"]
  },
  css: {
    preprocessorOptions: {
      // scss全局文件引入
      scss: {
        additionalData: '@use "@/styles/global.scss" as *;'
      }
    },
    postcss: {
      plugins: [
        postCssPxToRem({
          rootValue: 192,
          // 基准值，根据设计稿进行调整
          propList: ["*"],
          // 需要转换的属性，['*'] 表示所有属性
          unitPrecision: 5,
          // 转换后保留的小数位
          selectorBlackList: [],
          // 不进行转换的选择器
          replace: true,
          mediaQuery: false,
          // 允许在媒体查询中转换 px
          minPixelValue: 1
          // 最小转换数值
        })
      ]
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
